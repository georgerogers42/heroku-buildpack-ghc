#!/bin/bash

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2

GHC_VER=7.6.3
CABAL_VERSION=1.18.0.2
mkdir -p $CACHE_DIR

# Download GHC binaries if we do not have them yet
if [ ! -e $CACHE_DIR/ghc-$GHC_VER ]; then
  GHC_URL="http://www.haskell.org/ghc/dist/$GHC_VER/ghc-$GHC_VER-x86_64-unknown-linux.tar.bz2"
  echo "-----> Downloading GHC $GHC_VER"
  curl -# -L "$GHC_URL" | bunzip2 | tar x -C $CACHE_DIR
fi

if [ ! -e $CACHE_DIR/patchelf-0.6 ]; then
  PATCHELF_URL="http://hydra.nixos.org/build/1524660/download/2/patchelf-0.6.tar.bz2"
  echo "-----> Downloading PatchElf 0.6"
  curl -# -L "$PATCHELF_URL" | bunzip2 | tar x -C $CACHE_DIR
fi

echo "-----> Building PatchElf 0.6"
cd $CACHE_DIR/patchelf-0.6
./configure
make install

# Run installer if the ghc is not available
hash ghc
if [[ $? -ne 0 ]]; then
  echo "-----> Installing GHC $GHC_VER"
  cd $CACHE_DIR/ghc-$GHC_VER
  ./configure --prefix $BUILD_DIR/vendor/ghc-$GHC_VER
  make install

  echo "-----> Linking libgmp.so in an accessible place"
  mkdir -p $BUILD_DIR/vendor/ghc-libs
  ln -s /usr/lib/libgmp.so.3 $BUILD_DIR/vendor/ghc-libs/libgmp.so

  echo "-----> Preparing GHC to live in /app/vendor"
  find $BUILD_DIR/vendor/ghc-$GHC_VER/lib/ghc-$GHC_VER/package.conf.d -type f | xargs perl -pi -e "s%$BUILD_DIR%/app%g"
  $BUILD_DIR/vendor/ghc-$GHC_VER/bin/ghc-pkg recache
  find $BUILD_DIR/vendor/ghc-$GHC_VER/{lib,bin} -type f | xargs perl -pi -e "s%$BUILD_DIR%/app%g"

  echo "-----> Patching GHC to find libgmp"
  find $BUILD_DIR/vendor/ghc-7.6.3 -type f -executable -exec sh -c "file {} | grep -q ELF" \; -print | xargs -L 1 $CACHE_DIR/patchelf-0.6/src/patchelf --set-rpath /usr/lib:/app/vendor/ghc-libs
fi

CABAL_URL=http://www.haskell.org/cabal/release/cabal-install-$CABAL_VERSION/cabal-install-$CABAL_VERSION.tar.gz
curl -# -L "$CABAL_URL" | tar xz -C $CACHE_DIR
cd $CACHE_DIR/cabal-$CABAL_VERSION
./bootstrap.sh

cd /app
cabal install
